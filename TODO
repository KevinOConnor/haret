New features:

* Port commands from gnu-haret to mainline haret.

* Define new machine classes (eg, hermes, wizard)

* Extend "dump mmu" code to show more flags in the page tables (eg,
  domains).

* Gpio watching infrastructure.  Monitoring of gpios is a critical
  part of machine discovery.  The current code only support old PXA
  gpios.


Misc cleanups:

* Audit existing commands for PXA specific requirements, and disable
  them on non pxa platforms.

* Scan all L1 based 1meg virtual->physical mappings at startup.  This
  will make memPhysMap_section available even in critical sections
  where the code can't call into wince.

  * It might be useful to make the memPhysMap_section call the default
    and implement a new memPhysMap_temp that can call the wince
    VirtualCopy function when there is no l1 mapping available.  Many
    places in the code assume a reference from memPhysMap has a long
    lifespan, and if the VirtualCopy method is invoked these places
    may fail mysteriously.

  * It may also be useful to implement an optional "window size"
    parameter to memPhysMap - some code assumes it can access large
    areas from a memPhysMap reference, and this may not be true on all
    machines.

* Implement a "redirect" command that can run a command and forward
  its output to a file.

  * Remove pdump/vdump in favor of pd/vd

  * Remove "dump" based commands and re-implement them as regular
    commands.  It isn't clear why "dump mmu" isn't implemented as
    "mmudump".

* Move ac97 dump from cpu.c to its own (pxa specific) file.

* Port s3c24xx based code into standard machine detection hierarchy.

* Remove old Microsoft based build code.

* Submit nled.h, pkfuncs.h, and pwinuser.h to cegcc.

* Get "bwmem" command working or remove it.

* Get linux penguin logo working or remove it.


Possible features for "wi":

* Support hooking of interrupts on non-pxa based processors.  There is
  nothing PXA specific about hooking the wince interrupt vector - the
  code can be refactored to pull out the PXA specific stuff.

  * It should also be possible to have each machine define its own
    interrupt additions.  This will allow the egpio and asic3
    interrupts to be monitored as easily as the builtin interrupts.

* It should be possible to implement a portable instruction breakpoint
  system by overwriting code in memory with an interrupt or "undefined
  instruction" code.  (It may also be possible to just jump to a
  special handler.)  This would allow breakpoints on machines other
  than the PXA.

* It may be possible to implement a portable memory tracing capability
  by fiddling with the MMU table.  This may permit basic memory
  tracing features on non PXA processors.

* Find out why AllocPhysMem is needed - it is unclear why the
  interrupt vector can't jump to an address in normal Haret exe space.
