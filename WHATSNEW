<next version> <kevin@koconnor.net>

  * DUMP no longer takes a filename parameter.  Use the REDIR command
    instead.  (For example, "DUMP GPIO out.txt" is now "REDIR out.txt
    DUMP GPIO".)

  * Implement new command: IF

  * Implement new variable MACHMTYPE (contains the auto detected
    mtype).

20070103 0.4.6 <kevin@koconnor.net>, <pmiscml@gmail.com>

  * New commands: RUNSCRIPT, BG, REDIR

  * The linload build support has been modified to support linking in
    a haret script.  The last line in the script should run the new
    "RAMBOOT" command.  An example build would look something like:

    make linload SCRIPT=myharet.txt KERNEL=zImage INITRD=abc

  * Add new machines: hermes, wizard, g500, artemis

  * Add mechanism to check for DMA corruption during kernel load by
    CRCing the kernel before and after the preloader relocates it.  To
    enable, send the command "set kernelcrc 1" before booting.

  * Check that boot FB feedback wouldn't overwrite kernel/initrd
    memory. Disable it if does. This fixes booting on h3900, h4000, etc.

  * Added detection of h3900, h2200.

20061205 0.4.5 <kevin@koconnor.net>

  * Support memory polling commands (WATCH/ADDWATCH).  This will allow
    one to poll an area of memory and check for changes.  The "wi"
    command has also been extended to support memory polling during
    interrupt and trace/breakpoint events (see ADDIRQWATCH /
    ADDTRACEWATCH).

  * Support multiple simultaneous network connections to haret.  This
    can be invoked by calling the new "network <port>" haret command.
    Having multiple telnet windows can be useful when using haret to
    invoke a wince action while simultaneously tracing the results.
    Warning - most of haret is not thread-safe, so care should be
    taken to not run intricate commands simultaneously.

  * Add new machine: jornada820

  * Add new commands: LOG, UNLOG, PS, KILL, LOADLIBRARYEX, NLEDSET,
    LSMOD, POWERMON

  * Removed support for command-line options "-r" and "-k".  These
    options are superseded by the linload.exe program and the command
    "KILL".  This was done, in part, because the "-k" option required
    toolhelp.dll which may not be present on old PDAs.

20061118 0.4.4 <kevin@koconnor.net>

  * Add ability to bind haret, kernel, and initrd into a single exe.
    This is done by running:

    make linload CMDLINE="xx" KERNEL=zImage INITRD=abc

    A file out/linload.exe will be created.  Running this on a pda
    will launch the specified kernel.  This feature may be useful for
    building linux installation kits in an easy to run application.

  * New linux bootloading code.  This new code now does most of the
    actions from C code.  This allows more diagnostic utilities (eg,
    now lines are written to the framebuffer from the preloader).
    Note that the penguin logo was disabled in this release.  (A
    simple progress bar was added in its place.)

  * Reenabled support for detection of framebuffer via gx.dll calls
    (eg, GXOpenDisplay).  This is done via the late library loading
    code.

20061115 0.4.3 <kevin@koconnor.net>

  * Add pxa specific interrupt watching code.  This allows one to
    trace interrupts, trace memory access, and set instruction
    breakpoints.  This command is only available when haret is run on
    a pxa processor.

  * Add the ability to bind functions to dlls at runtime instead of at
    compile time.  This allows the code to run on older OSs, while
    still offering advanced functionality on newer pdas.  This is
    available via the LOAD_LATE macro in lateload.h.

  * Add support for enabling/disabling commands and variables at
    startup.  This is useful to disable commands that aren't
    applicable to a certain platform.

20061112 0.4.2 <kevin@koconnor.net>

  * Implement command registration capability.  Now it is possible to
    register a new command by using the REG_CMD macro found in
    script.h.  This means script.cpp shouldn't need to be modified as
    new commands are added.

  * Change Output to take a "char *" instead of "wchar_t *" for the
    format.  Enable gcc's printf style warning checks.

  * Move functionality of Log to new function Screen and implement it
    with same code as Output.

20061112 0.4.1 <kevin@koconnor.net>

  * Add "haretconsole" host based scripts.

  * Implement new Machine class to handle per-machine options.  Add
    support for auto-detecting the current machine type.

  * Import mach-types.h and pxa-regs.h from latest linux sources.
    Update code to use linux defs instead of local defines.

  * Add macro support for defining coprocessor accessor functions.

  * When mapping a physical address, scan for wince 1Meg section
    mapping that already exists.  This reduces the calls to
    VirtualAlloc and makes HaRET much more stable.  (For example, now
    "dump mmu" works reliably.)

  * Fix all compile warnings.

20061111 0.4.0 <kevin@koconnor.net>

  * Add the ability to log "Output()" messages to a disk file when a
    file "earlyharetlog.txt" exists in the same directory as the haret
    executable.  In addition, a bunch of startup Output() logs were
    added.  This feature is useful for diagnosing crashes at program
    startup.

  * Update code so that haret compiles with cegcc.  This involves a
    few minor code changes to the C++ code and some file renames.  The
    assembler syntax was also updated to work with gas.  Two
    existing features were disabled - gx based framebuffer detection
    and the BWMEM command - both were causing compile problems.

20061027 0.3.8 Paul Sokolovsky <pmiscml@gmail.com>

  * Support for big kernels (up to 5Mb of uncompressed size, zImage
    sizes up to at least 1.5Mb are ok).
  * Fix regression of QVGA bootlogo display, introduced in 0.3.7.

02-May-2006 v0.3.7, <ynezz@hysteria.sk>
    -*- Updated main dialog to WM GUI behavior
    -*- Replaced code for getting framebuffer pointer
    -*- Added possibility to init COM1 port settings
    -*- Added two commandline options -r(run) and -k(kill)
        run - don't do any gui stuff, just init and boot. This option shorten
        development cycle a lot, so you can do "synce-prun haret -r" as soon as 
        you have ActiveSync connection
        kill - just kills 'welcome.exe' process (LCD calibration) before haret 
        dialog startup, in case you won't calibrate LCD but need haret GUI
    -*- Added support for VGA booting penguin bitmaps
    -*- Added Visual Studio 2k5 project file
    -*- Replaced GAPI calls with display device escapes - this removes the
        GX.dll dependency. Hurray for this!

22-Apr-2005 v0.3.6
    -*- Reimplemented the patch from 01-Dec-2004 since it was lost (!?).
    -*- Added CPU autodetect routines, S3C24xx detection is currently not
        implemented although quite easy to implement.
    -*- Added the "CPU" readonly variable which contains the autodetected
        CPU family. Removed the CPUType variable since CPU detection should
        work quite reliably, so there's no need to override this manually.

11-Apr-2005
    -*- updates for seperate UART drivers
    -*- s3c24xx uart driver additions
    -*- settable cpu-type

06-Apr-2005 <unreleased>
    -*- Detect ARM920 and use correct cache-flush
    -*- avoid some of the cache flushing in the cpu get CR functions

01-Dec-2004 v0.3.5
    -*- Rewrote the cpuGetCP() and cpuGetCP() routines so that they don't use
        self-modifying code. This fixes a number of hangs experienced on different
        platforms in different circumstances.

27-Feb-2004 v0.3.4
    -*- Stop all DMA controllers before booting Linux.

31-Jan-2004 v0.3.3
    -*- Added an dumper for the AC97 controller.

10-Jan-2004 v0.3.2
    -*- Made all dumpers generalized. The list of dumpers is available by
        typing 'HELP DUMP'.
    -*- Added a dumper for dumping GPIO state in a format suitable for
        generating include/asm-arm/arch-pxa/xxx-init.h files.
    -*- Enhanced memory size detection. Alas, Windows CE does not have
        a function that would directly return the amount of RAM in the PDA,
        so you have to use different tricks for this.
    -*- Renamed GPSR function to GPLR since it reads/sets the GPIO Level
        Register.
    -*- Renamed WATCHGPIO to WGPIO for shorter typing.
    -*- Added the SLEEP command for waiting given number of milliseconds.
    -*- Added the BWMEM command which will measure PDA's memory performance
        using Larry McVoy's lmbench routines. However, since the code is
        modified (although mostly cosmetically) from the original, the
        numbers should NOT be published as the results of lmbench, but
        rather as results of HaRET.
    -*- Fixed a bug that prevented you from assigning string variables longer
        than 100 characters (they were truncated to this length). I've found
        this while using a very long 'cmdline' variable.

15-Nov-2003 v0.3.1
    -*- I've realised that HRET is quite hardly to pronounce for
        English-speaking people, so I've renamed the program to HaRET.
    -*- Added a generalised mechanism for adding new functions. They are
        displayed along with variables now (SET LIST has been replved
        with HELP VARS). To get the value of a function, you do it like
        in normal high-level languages, e.g. 'PRINT "%x" VMW(0xa0000000)'
        or 'set CP(15,2) 0xa0010000'.
    -*- Added three functions: GPSR, GPDR, GAFR which allow reading/writing
        to GPIO control registers.
    -*- Added DUMPGPIO command which displays in a readable format the state
        of the entire GPIO machinery.

14-Nov-2003 v0.3.0
    -*- Added variables (SET command). Added the Linux kernel boot
        funcionality. Added a nice penguin shown during kernel loading :)
    -*- Added a lot of new commands (PP[B|H|W/VP[B|H|W], WATCHGPIO,
        [V|P]WF and a lot more). Added functions (GPIO(), CP() etc).

16-Oct-2003 v0.2.1
    -*- The first release meant to be public. Added the telnetd emulation code
        so that commands can be now nicely interactively edited. Added some
        docs about HRET (the most useful part is the description of HRET
        scripting language).

15-Oct-2003 v0.2.0
    -*- This is the first release of what was once linexec. I hardly believe
        there is at least one original line left somewhere, however credits
        goes to original linexec authors Martin Demin, James Hicks, Joshua
        Wise (in no specific order) for things I've learned from linexec
        and also I'm grateful to Martin Demin for bringing the first
        Linux/Dell Axim port. I've learned lot from their code - hey,
        it's my first WinCE (and PDA) project.
